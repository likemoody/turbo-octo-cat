"""
Django settings for toc project.

Generated by 'django-admin startproject' using Django 2.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
import django_heroku

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
from sensitive import env_vars

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.path.join(BASE_DIR, '../../sensitive/env_vars.py')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
LOCAL = True

ALLOWED_HOSTS = [
    '127.0.0.1',
    '0.0.0.0',
]

PROJECT_VERSION = 'alpha 0.3'

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'app_blog.apps.AppBlogConfig',
    'app_users.apps.AppUsersConfig',
    'app_bookcrossing.apps.AppBookcrossingConfig',
    'crispy_forms'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'toc.urls'

TEMPLATES = [
    {
        'BACKEND' : 'django.template.backends.django.DjangoTemplates',
        'DIRS'    : [
            os.path.join(BASE_DIR, 'app_blog/templates/app_blog'),
            os.path.join(BASE_DIR, 'app_users/templates/app_users'),
            os.path.join(BASE_DIR, 'templates'),
        ],
        'APP_DIRS': True,
        'OPTIONS' : {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'toc.context_processors.project_general',
                'toc.context_processors.unread_messages',
            ],
        },
    },
]
TEMPLATE_CONTEXT_PROCESSORS = (
    'django.core.context_processors.i18n',
)

WSGI_APPLICATION = 'toc.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

if LOCAL:
    DATABASES = {
        'default': {
            'HOST'    : '127.0.0.1',
            'NAME'    : env_vars.DB_NAME,
            'ENGINE'  : 'django.db.backends.postgresql_psycopg2',
            'USER'    : env_vars.DB_LOGIN,
            'PASSWORD': env_vars.DB_PASS,
        }
    }
else:
    DATABASES = {
        'default': {
            'HOST'    : os.environ.get("DB_HOST"),
            'NAME'    : os.environ.get("DB_NAME"),
            'ENGINE'  : 'django.db.backends.postgresql_psycopg2',
            'USER'    : os.environ.get("DB_LOGIN"),
            'PASSWORD': os.environ.get("DB_PASS"),
            'PORT'    : os.environ.get("DB_PORT"),
        }
    }

# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'pl-PL'

LANGUAGES = [
    ('pl', 'Polish'),
    ('en', 'English'),
    ('uk', 'Ukrainian'),
]

LOCALE_PATHS = [
    os.path.join(BASE_DIR, 'locale/')
]

USE_I18N = True
USE_L10N = True

TIME_ZONE = 'UTC'
USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static/')

MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')
MEDIA_URL = '/media/'

CRISPY_TEMPLATE_PACK = 'bootstrap4'

LOGIN_URL = 'login'
LOGIN_REDIRECT_URL = 'blog-home'

import dj_database_url

db_from_env = dj_database_url.config()
DATABASES['default'].update(db_from_env)

# Activate Django-Heroku.
django_heroku.settings(locals())
